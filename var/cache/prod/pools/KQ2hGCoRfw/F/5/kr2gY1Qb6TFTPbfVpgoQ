<?php //App.Entity.Comments

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\Comments',
                'pseudo',
                3 => 'email',
            ],
            'defaultGroup' => [
                'Comments',
            ],
            'members' => [
                [
                    'pseudo' => [
                        $o[1],
                    ],
                    'email' => [
                        $o[3],
                    ],
                ],
            ],
            'properties' => [
                [
                    'pseudo' => $o[1],
                    'email' => $o[3],
                ],
            ],
            'class' => [
                1 => 'App\\Entity\\Comments',
                3 => 'App\\Entity\\Comments',
            ],
            'property' => [
                1 => 'pseudo',
                3 => 'email',
            ],
            'constraints' => [
                1 => [
                    $o[2],
                ],
                3 => [
                    $o[4],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'Default' => [
                        $o[2],
                    ],
                    'Comments' => [
                        $o[2],
                    ],
                ],
                3 => [
                    'Default' => [
                        $o[4],
                    ],
                    'Comments' => [
                        $o[4],
                    ],
                ],
            ],
            'maxMessage' => [
                2 => 'Your pseudo cannot be longer than {{ limit }} characters',
            ],
            'minMessage' => [
                2 => 'Your pseudo must be at least {{ limit }} characters long',
            ],
            'max' => [
                2 => 25,
            ],
            'min' => [
                2 => 5,
            ],
            'groups' => [
                2 => [
                    'Default',
                    'Comments',
                ],
                4 => [
                    'Default',
                    'Comments',
                ],
            ],
            'message' => [
                4 => 'The email \'{{ value }}\' is not a valid email.',
            ],
        ],
    ],
    $o[0],
    []
); }];
