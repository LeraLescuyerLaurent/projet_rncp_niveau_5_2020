<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Posts extends \App\Entity\Posts implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'imagesUne', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'hat', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'subCategory', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'content', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'online', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'slider', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'mediaToken', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'points', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'comments'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'imagesUne', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'hat', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'subCategory', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'content', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'online', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'slider', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'mediaToken', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'points', '' . "\0" . 'App\\Entity\\Posts' . "\0" . 'comments'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Posts $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): ?\App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug(string $slug): ?\App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagesUne(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagesUne', []);

        return parent::getImagesUne();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagesUne(string $imagesUne): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagesUne', [$imagesUne]);

        return parent::setImagesUne($imagesUne);
    }

    /**
     * {@inheritDoc}
     */
    public function getHat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHat', []);

        return parent::getHat();
    }

    /**
     * {@inheritDoc}
     */
    public function setHat(string $hat): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHat', [$hat]);

        return parent::setHat($hat);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubCategory(): ?\App\Entity\SubCategories
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubCategory', []);

        return parent::getSubCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubCategory(?\App\Entity\SubCategories $subCategory): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubCategory', [$subCategory]);

        return parent::setSubCategory($subCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent(string $content): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $createdAt): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnline(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnline', []);

        return parent::getOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnline(?bool $online): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnline', [$online]);

        return parent::setOnline($online);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlider(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlider', []);

        return parent::getSlider();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlider(?bool $slider): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlider', [$slider]);

        return parent::setSlider($slider);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaToken(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaToken', []);

        return parent::getMediaToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setMediaToken(string $mediaToken): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMediaToken', [$mediaToken]);

        return parent::setMediaToken($mediaToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoints(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoints', []);

        return parent::getPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoints(int $points): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoints', [$points]);

        return parent::setPoints($points);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\App\Entity\Comments $comment): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\App\Entity\Comments $comment): \App\Entity\Posts
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

}
